version: '3'

services:

  # a simple rabbitMQ
    hermesmq:
      image: rabbitmq:3-management-alpine 

      labels:
        NAME: "hermesmq"

      hostname: hermesmq
      container_name: hermesmq

      environment:
        RABBITMQ_ERLANG_COOKIE: "QWERTYASDFGHZXCVBN01"
        RABBITMQ_DEFAULT_USER: "rabbitmq"
        RABBITMQ_DEFAULT_PASS: "rabbitmq"
        RABBITMQ_DEFAULT_VHOST: "/"

      ports:
        - "5672:5672"
        - "15672:15672"

      expose:
        - "5672"
        - "15672"
      
      volumes:
        - ../../volumes/data/hermesmq:/data/


  # the HERMES running instance 
    hermes:
      image: ohiaia/gaia:hermes

      labels:
        NAME: "hermes"

      hostname: hermes
      container_name: hermes

      volumes:
        - ../../hermes:/hermes/
        # Change this to "kosmo"
        - ../../volumes/data/hermes:/data/
        # Automation will remove this
        - ../:/CHAOS/     

      links:
        - hermesmq:hermesmq

      depends_on:
        - hermesmq
        
      restart: unless-stopped
      entrypoint: /bin/bash 
      command: ./CHAOS/stack/start.sh 
    
    
  # postgresBox
    hermespostgresbox:
      image: postgres:latest

      labels:
        NAME: "hermespostgresbox"
      
      hostname: "hermespostgresbox"
      container_name: "hermespostgresbox"
      
      environment:
        - DB_NAME=hermes
        - DB_USER=hermes
        - DB_PASS=hermes
        - DB_PORT=5432
        - DB_SERVICE=postgres
        - DB_TEMPLATE=postgres_

      volumes:
        - ../../postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
        - ../../volumes/data/hermespostgresbox:/data/

      ports:
        - "5432:5432"
      expose:
        - "5432"

      restart: always


  # a java docker for the sdk 
    sdk:
      image: java:8-jdk

      labels:
        NAME: "sdk"

      hostname: "sdk"
      container_name: "sdk"

      volumes:
        - ../../sdk:/sdk/

      links:
        - hermesmq:hermesmq

      depends_on:
        - hermesmq
        
      restart: unless-stopped
      command: tail -f /dev/null


  # setup a NodeBox